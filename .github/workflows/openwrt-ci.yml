# 
# <https://github.com/KFERMercer/OpenWrt-CI>
#
# Copyright (C) 2019 P3TERX
#
# Copyright (C) 2020 KFERMercer
#
name: OpenWrt-CI

on:
  schedule:
    - cron: 0 20 * * *
  release:
    types: [published]

jobs:

  build_openwrt:

    name: Build OpenWrt firmware

    runs-on: ubuntu-latest

    if: github.event.repository.owner.id == github.event.sender.id

    steps:

      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: master

      - name: Space cleanup
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d
          sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php* android*
          sudo -E apt-get update          CONFIG_KERNEL_BUILD_DOMAIN="Azure"
79
          EOF
80
​
81
          #
82
          # ===============================================================
83
          # 
84
​
85
          sed -i 's/^[ \t]*//g' ./.config
86
          make defconfig
87
​
88
      - name: Make download
89
        run: |
90
          make download -j8 || make download -j1 V=s
91
          rm -rf $(find ./dl/ -size -1024c)
92
          df -h
93
​
94
      - name: Compile firmware
95
        run: |
96
          make -j$(nproc) || make -j1 V=s
97
          echo "======================="
98
          echo "Space usage:"
99
          echo "======================="
100
          df -h
101
          echo "======================="
102
          du -h ./ --max-depth=1
103
          du -h /mnt/openwrt/ --max-depth=1 || true
104
​
105
      - name: Prepare artifact
106
        run: |
107
          mkdir -p ./artifact/firmware
108
          mkdir -p ./artifact/package
109
          mkdir -p ./artifact/buildinfo
110
          rm -rf $(find ./bin/targets/ -type d -name "packages")
111
          cp -rf $(find ./bin/targets/ -type f) ./artifact/firmware/
112
          cp -rf $(find ./bin/packages/ -type f -name "*.ipk") ./artifact/package/
113
          cp -rf $(find ./bin/targets/ -type f -name "*.buildinfo" -o -name "*.manifest") ./artifact/buildinfo/
114
​
115
      - name: Deliver buildinfo
116
        uses: actions/upload-artifact@v2
117
        with:
118
          name: OpenWrt_buildinfo
119
          path: ./artifact/buildinfo/
120
​
121
      - name: Deliver package
122
        uses: actions/upload-artifact@v2
123
        with:
124
          name: OpenWrt_package
125
          path: ./artifact/package/
126
​
127
      - name: Deliver firmware
128
        uses: actions/upload-artifact@v2
129
        with:
130
          name: OpenWrt_firmware
131
          path: ./bin/targets/
132
​
133
      - name: Upload release asset
134
        if: github.event == 'release'
135
        uses: svenstaro/upload-release-action@v2
136
        with:
137
          repo_token: ${{ secrets.YOURTOKEN }}
138
          file: ./artifact/firmware/*
139
          tag: ${{ github.ref }}
140
          file_glob: true
141
​
          sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler antlr3 gperf swig
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean

          df -h

      - name: Update feeds
        run: |
          sed -i 's/#src-git helloworld/src-git helloworld/g' ./feeds.conf.default
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: Generate configuration file
        run: make defconfig

      - name: Make download
        run: |
          make download -j8
          find dl -size -1024c -exec rm -f {} \;

      - name: Compile firmware
        run: |
          make -j$(nproc) || make -j1 V=s
          echo "======================="
          echo "Space usage:"
          echo "======================="
          df -h
          echo "======================="
          du -h --max-depth=1 ./ --exclude=build_dir --exclude=bin
          du -h --max-depth=1 ./build_dir
          du -h --max-depth=1 ./bin

      - name: Prepare artifact
        run: |
          mkdir -p ./artifact/firmware
          mkdir -p ./artifact/package
          CONFIG_KERNEL_BUILD_DOMAIN="Azure"
79
          EOF
80
​
81
          #
82
          # ===============================================================
83
          # 
84
​
85
          sed -i 's/^[ \t]*//g' ./.config
86
          make defconfig
87
​
88
      - name: Make download
89
        run: |
90
          make download -j8 || make download -j1 V=s
91
          rm -rf $(find ./dl/ -size -1024c)
92
          df -h
93
​
94
      - name: Compile firmware
95
        run: |
96
          make -j$(nproc) || make -j1 V=s
97
          echo "======================="
98
          echo "Space usage:"
99
          echo "======================="
100
          df -h
101
          echo "======================="
102
          du -h ./ --max-depth=1
103
          du -h /mnt/openwrt/ --max-depth=1 || true
104
​
105
      - name: Prepare artifact
106
        run: |
107
          mkdir -p ./artifact/firmware
108
          mkdir -p ./artifact/package
109
          mkdir -p ./artifact/buildinfo
110
          rm -rf $(find ./bin/targets/ -type d -name "packages")
111
          cp -rf $(find ./bin/targets/ -type f) ./artifact/firmware/
112
          cp -rf $(find ./bin/packages/ -type f -name "*.ipk") ./artifact/package/
113
          cp -rf $(find ./bin/targets/ -type f -name "*.buildinfo" -o -name "*.manifest") ./artifact/buildinfo/
114
​
115
      - name: Deliver buildinfo
116
        uses: actions/upload-artifact@v2
117
        with:
118
          name: OpenWrt_buildinfo
119
          path: ./artifact/buildinfo/
120
​
121
      - name: Deliver package
122
        uses: actions/upload-artifact@v2
123
        with:
124
          name: OpenWrt_package
125
          path: ./artifact/package/
126
​
127
      - name: Deliver firmware
128
        uses: actions/upload-artifact@v2
129
        with:
130
          name: OpenWrt_firmware
131
          path: ./bin/targets/
132
​
133
      - name: Upload release asset
134
        if: github.event == 'release'
135
        uses: svenstaro/upload-release-action@v2
136
        with:
137
          repo_token: ${{ secrets.YOURTOKEN }}
138
          file: ./artifact/firmware/*
139
          tag: ${{ github.ref }}
140
          file_glob: true
141
​
